#options(repos="http://cran.md.tsukuba.ac.jp")
#install.packages("igraph")
	
require(igraph)
		
kb.metrics<-function(g, metrics_matrix){
	return (t(rbind(V(g)$name, metrics_matrix)))
}

kb.sort<-function(table, row=1){
	return (table[sort.list(table[,row]),])
}

kb.rev<-function(table, row=1){
	return (table[rev(sort.list(table[,row])),])
}

kb.sortedmetrics<-function(g, matrix){
	return (kb.sort(kb.metrics(g, matrix)))
}

kb.degree<-function(g){
	return (degree(g)/(vcount(g)-1))
}

kb.betweenness<-function(g){
	return (betweenness(g) * 2 / ((vcount(g)-2) * (vcount(g)-1)))
}

kb.closeness<-function(g){
	return (closeness(g))
}

kb.eigenvector<-function(g){
	return (evcent(g)$vector)
}

kb.pagerank<-function(g){
	return (page.rank(g)$vector)
}

kb.cc<-function(g){
	return (clust.coeff(g))
}

# by http://igraph.wikidot.com/r-recipes
kb.centrality.norm<-function(graph,type=c("degree","closeness","betweenness"),centralization=FALSE)
{    
    result<-NA
    g<-graph
    cent<-centralization
    if (!is.igraph(g)) {stop("Not a graph object")}
    if (type[[1]] == "degree") {
        if (!cent) result <- degree(g)/(vcount(g)-1)
        else result <- (sum(max(degree(g))-degree(g)))/((vcount(g)-1)*(vcount(g)-2))}
    else if (type[[1]] == "betweenness") {
        temp <- 2*betweenness(g)/((vcount(g)-1)*(vcount(g)-2))
        if (!cent) result <- temp
        else  result <- sum(max(temp)-temp)/(vcount(g)-1)}
    else if (type[[1]] == "closeness") {
        if (!cent) result <- closeness(g)
        else result <- (2*vcount(g)-3)*(sum(max(closeness(g))-closeness(g)))/((vcount(g)-1)*(vcount(g)-2))}
    else {stop("this type is unavailable or mispelled")}
    return(result)
}

kb.centrality.norm(g, type="degree", centralization=TRUE)
kb.centrality.norm(g, type="closeness", centralization=TRUE)
kb.centrality.norm(g, type="betweenness", centralization=TRUE)
